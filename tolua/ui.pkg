class CButtonPanel
{
	int X;
	int Y;
	bool ShowCommandKey;
};

class CInfoPanel
{
	int X;
	int Y;
};

class CUserInterface
{
	CInfoPanel InfoPanel;
	CButtonPanel ButtonPanel;
	CMinimap Minimap;
};

extern CUserInterface UI;

class CIcon
{
	static CIcon *New(const char *ident);
	static CIcon *Get(const char *ident);

	tolua_readonly tolua_property__s char *Ident;
	CGraphic *G;
	int Frame;
};

$using namespace gcn;

class LuaActionListener
{
	LuaActionListener(lua_State *lua, lua_Object luaref);
};

class Widget 
{
	void addActionListener(LuaActionListener *actionListener);
	void setFont(CFont *font);
	static void setGlobalFont(CFont *font);
};

class ImageButton : public Widget
{
	ImageButton(char *caption, CGraphic *normalImage, CGraphic *pressedImage);
};

class ImageWidget : public Widget
{
	ImageWidget(CGraphic *image);
};

class Slider : public Widget
{
	Slider(double scaleStart, double scaleEnd);
	double getValue();
	void setWidth(int w);
	void setHeight(int h);
};

class CheckBox : public Widget
{
	CheckBox(char *caption, bool marked = false);
	bool isMarked();
};

class Label : public Widget
{
	Label(const std::string &caption);
};

class RadioButton : public Widget
{
	RadioButton(const std::string &caption, const std::string &group, bool marked=false);
};

// FIXME Combine with ScrollArea in our own widget
//class TextBox : public Widget
//{
//	TextBox(const std::string &text);
//};

class TextField : public Widget
{
	TextField(const std::string &text);
};

class ListBoxWidget : public Widget
{
	ListBoxWidget();
	void setList(lua_State *lua, lua_Object *lo);
};

class DropDownWidget : public Widget
{
	DropDownWidget();
	void setList(lua_State *lua, lua_Object *lo);
	int getSelected();
	void setSelected(int selection);
};

class Container
{
	void add(Widget *widget, int x, int y);
	void clear();
};

class Windows : public Widget
{
	Windows(const std::string &text, int width, int height);
	void add(Widget *widget, int x, int y);
};

extern Container *top;

class MenuScreen
{
	MenuScreen() : runLoop(false) {}
	void run();
	void stop();
};


$void StartMap(const char *str);

void StartMap(const char *str);

