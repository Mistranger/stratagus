
/* $Id$ */

- cost of short paths is too big (most probably because of the memset() in
  LowlevelReset()).
- use this for solving the case when highlevel path is found but lowlevel path
  is blocked by a unit - detect the last reachable region along the highlevel
  path, disconnect this region and the next one temporarily and repeat
  highlevel pathfinding?
- change the highlevel traceback so that it in case of 8-connected path
  regions adds *both* of the neighbors (not just one (arbitrary chosen) as it
  is now)
- find a solution for the deficiency in the pathfinder's principle where
  optimal lowlevel path might lie *outside* the optimal highlevel path. E.g.

  ........ ........ ........
  ........ ........ ........       .  ... clear terrain
  ........ ........ ........       x  ... blocked terrain
  ........ ........ ........       G  ... goal field
  ........ ........ ........       U  ... unit
  ........ ........ ........
  ........ ........ ........
  ........ ........ ........

  .Gxxxxxx xxxxxxxx xxxxxxU.
  ..xxxxxx xxxxxxxx xxxxxx..
  ..xxxxxx xxxxxxxx xxxxxx..
  ..xxxxxx xxxxxxxx xxxxxx..
  ..xxxxxx xxxxxxxx xxxxxx..
  ..xxxxxx xxxxxxxx xxxxxx..
  ..xxxxxx xxxxxxxx xxxxxx..
  ........ ........ ........


  When we say the unit placed at U to go to G, it will choose path to the
  south of the obstacle instead of picking a much shorter path to the north.
  From the point of view of current pathfinder's logic this makes sense because
  corresponding highlevel path (2,1)->(2,0)->(1,0)->(0,0)->(0,1) is longer
  when compared to (2,1)->(1,1)->(0,1).

- experiment with erasing already visited regions from highlevel path to
  prevent unnecessary expanding nodes near the beginning of the path long
  behind the cutting edge.
- experiment with heuristics (weight, type of function) to see how it
  influences the number of iterations and numbers of revocations from Open
  and Closed sets and how much is the resulting path ugly or even suboptimal.
- experiment with path beautifying (either by assigning greater cost to
  diagonal moves or somehow during traceback).
